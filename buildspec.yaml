version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo region- $AWS_REGION
      - echo accountID- $AWS_ACCOUNT_ID
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Granting execution permissions to Gradle wrapper...
      - chmod +x ./gradlew
      - echo Cleaning up previous builds...
      - ./gradlew clean

  build:
    commands:
      - echo Building the application with Gradle...
      - ./gradlew build
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .

  post_build:
    commands:
      - echo Tagging the Docker image...
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Pushing the Docker image to AWS ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build process completed successfully.

artifacts:
  files:
    - build/libs/*.jar
  discard-paths: yes

environment:
  variables:
    IMAGE_REPO_NAME: "userms/repo"  # Replace with your ECR repository name
    IMAGE_TAG: "latest"                  # Replace with your desired image tag
    AWS_REGION: "us-east-1"              # Replace with your AWS region
    AWS_ACCOUNT_ID: "140023374329"       # Replace with your AWS account ID
