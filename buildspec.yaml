version: 0.2

phases:
  pre_build:
    commands:
      - aws --version
      - chmod +x ./gradlew
      - ./gradlew clean build
      - echo Logging in to Amazon ECR...
      - REPOSITORY_URI=public.ecr.aws/a1r2r3c7
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/a1r2r3c7
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo Build started on `date`
        - echo Building the Docker image...
        - docker build -t $REPOSITORY_URI:latest .
        - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
        - echo Pushing the Docker images...
        - docker push $REPOSITORY_URI:latest
        - docker push $REPOSITORY_URI:$IMAGE_TAG
        - echo Writing image definitions file...
        - printf '[{"name":"course-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
        - echo Writing image definitions file...
        - DOCKER_CONTAINER_NAME=userms/repo
        - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
        - echo $DOCKER_CONTAINER_NAME
        - echo printing imagedefinitions.json
        - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - build/libs/userms.jar

